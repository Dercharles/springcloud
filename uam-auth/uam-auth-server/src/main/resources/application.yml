spring:
  profiles:
    active: local

---
#For local environment
spring:
    profiles: local
    application:
        name: uam-auth
    jackson:
        date-format: yyyy-MM-dd HH:mm:ss
        time-zone: GMT+8
        default-property-inclusion: non_null
    redis:
        database: 1
        host: 139.198.190.164
        port: 42193
        password: dzjt
#        host: ${REDIS_HOST:localhost}
#        port:  ${REDIS_PORT:6379}
        pool:
            max-active: 20
    datasource:
      name: uam_auth
      url: jdbc:mysql://139.198.190.164:31269/uam_auth?useUnicode=true&characterEncoding=UTF8
      username: dzjtuser
      password: mysql@dzjt2017
      # 使用druid数据源
      type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: com.mysql.jdbc.Driver
      filters: stat
      maxActive: 20
      initialSize: 1
      maxWait: 60000
      minIdle: 1
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: select 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      maxOpenPreparedStatements: 20
    rabbitmq:
      host: 139.198.190.164
      port: 25672
      username: guest
      password: guest
    zipkin:
        enabled: true
    sleuth:
        sampler:
            percentage: 1
mybatis:
    basepackage: com.dzjt.cbs.uam.security.auth.mapper
    xmlLocation: classpath:mapper/**/*.xml
    mapper-locations: "classpath*:mapper/*.xml"

server:
    port: 7177 #启动端口

feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true

ribbon:
  eureka:
    enabled: true
  ReadTimeout: 60000
  ConnectTimeout: 60000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1
  OkToRetryOnAllOperations: false

hystrix:
  threadpool:
    default:
      coreSize: 1000 ##并发执行的最大线程数，默认10
      maxQueueSize: 1000 ##BlockingQueue的最大队列数
      queueSizeRejectionThreshold: 500 ##即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000

eureka:
    instance:
        statusPageUrlPath: /info
        healthCheckUrlPath: /health
        # docker 部署开启
        prefer-ip-address: true
        ip-address: 127.0.0.1
    client:
        serviceUrl:
            defaultZone: http://localhost:8761/eureka/
                    # docker 部署开启
#            defaultZone: http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka/

jwt:
  token-header: Authorization
  expire: 3600
  rsa-secret: xx1WET12^%3^(WE45

client:
  id: uam-auth
  secret: 123456
  token-header: client-token
  expire: 3600
  rsa-secret: x2318^^(*WRYQWR(QW&T

logging:
    file: logs/application-uam-auth.log
    pattern:
      console: "%d %-5level %logger : %msg%n"
      file: "%d %-5level [%thread] %logger : %msg%n"
    level:
        com.dzjt.cbs.uam.security.auth: DEBUG

---

#For dev environment
spring:
    profiles: dev
    application:
        name: uam-auth
    jackson:
        date-format: yyyy-MM-dd HH:mm:ss
        time-zone: GMT+8
        default-property-inclusion: non_null
    redis:
        database: 1
        host: 139.198.190.164
        port: 42193
        password: dzjt
        pool:
            max-active: 20
    datasource:
      name: uam_auth
      url: jdbc:mysql://192.168.30.3:3306/uam_auth?useUnicode=true&characterEncoding=UTF8
      username: dzjtuser
      password: mysql@dzjt2017
      # 使用druid数据源
      type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: com.mysql.jdbc.Driver
      filters: stat
      maxActive: 20
      initialSize: 1
      maxWait: 60000
      minIdle: 1
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: select 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      maxOpenPreparedStatements: 20
    rabbitmq:
      host: 192.168.10.2
      port: 5672
      username: guest
      password: guest
    zipkin:
        enabled: true
    sleuth:
        sampler:
            percentage: 1
mybatis:
    basepackage: com.dzjt.cbs.uam.security.auth.mapper
    xmlLocation: classpath:mapper/**/*.xml
    mapper-locations: "classpath*:mapper/*.xml"

server:
    port: 7177 #启动端口

feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true

ribbon:
  eureka:
    enabled: true
  ReadTimeout: 60000
  ConnectTimeout: 60000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1
  OkToRetryOnAllOperations: false

hystrix:
  threadpool:
    default:
      coreSize: 1000 ##并发执行的最大线程数，默认10
      maxQueueSize: 1000 ##BlockingQueue的最大队列数
      queueSizeRejectionThreshold: 500 ##即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000

eureka:
    instance:
        statusPageUrlPath: /info
        healthCheckUrlPath: /health
        # docker 部署开启
        prefer-ip-address: true
        ip-address: 127.0.0.1
    client:
        serviceUrl:
            defaultZone: http://localhost:8761/eureka/
                    # docker 部署开启
#            defaultZone: http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka/

jwt:
  token-header: Authorization
  expire: 3600
  rsa-secret: xx1WET12^%3^(WE45

client:
  id: uam-auth
  secret: 123456
  token-header: client-token
  expire: 3600
  rsa-secret: x2318^^(*WRYQWR(QW&T

logging:
    file: logs/application-uam-auth.log
    pattern:
      console: "%d %-5level %logger : %msg%n"
      file: "%d %-5level [%thread] %logger : %msg%n"
    level:
        com.dzjt.cbs.uam.security.auth: ERROR
